{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/audrey/Bureau/test-ts-react/src/components/AddWilder.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Button, Error, Form, Input, Label } from './styles/form-elements';\n\nconst AddWilder = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [city, setCity] = useState('');\n  const [error, setError] = useState('');\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: async e => {\n      e.preventDefault();\n\n      try {\n        const result = await axios.post('http://localhost:5000/api/wilder/create', {\n          name,\n          city\n        });\n        console.log(result);\n\n        if (result.data.success) {\n          setError('');\n        }\n      } catch (error) {\n        if (error.response) {\n          setError(error.response.data.message);\n        } else {\n          setError(error.message);\n        }\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(Label, {\n      htmlFor: \"name-input\",\n      children: \"Name :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"name-input\",\n      type: \"text\",\n      placeholder: \"Type the name\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      htmlFor: \"city-input\",\n      children: \"City :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"city-input\",\n      type: \"text\",\n      placeholder: \"Type the city\",\n      value: city,\n      onChange: e => setCity(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), error !== '' && /*#__PURE__*/_jsxDEV(Error, {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddWilder, \"YJIBteXn+SMgAacrbBqjViWq/VQ=\");\n\n_c = AddWilder;\nexport default AddWilder;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddWilder\");","map":{"version":3,"sources":["/home/audrey/Bureau/test-ts-react/src/components/AddWilder.tsx"],"names":["React","useState","axios","Button","Error","Form","Input","Label","AddWilder","name","setName","city","setCity","error","setError","e","preventDefault","result","post","console","log","data","success","response","message","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,KAA9B,EAAqCC,KAArC,QAAkD,wBAAlD;;AAEA,MAAMC,SAAS,GAAG,MAAmB;AAAA;;AACnC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,sBACE,QAAC,IAAD;AACE,IAAA,QAAQ,EAAE,MAAOc,CAAP,IAA6C;AACrDA,MAAAA,CAAC,CAACC,cAAF;;AACA,UAAI;AACF,cAAMC,MAAM,GAAG,MAAMf,KAAK,CAACgB,IAAN,CAAW,yCAAX,EAAsD;AACzET,UAAAA,IADyE;AAEzEE,UAAAA;AAFyE,SAAtD,CAArB;AAIAQ,QAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;;AACA,YAAIA,MAAM,CAACI,IAAP,CAAYC,OAAhB,EAAyB;AACvBR,UAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;AACF,OATD,CASE,OAAOD,KAAP,EAAc;AACd,YAAIA,KAAK,CAACU,QAAV,EAAoB;AAClBT,UAAAA,QAAQ,CAACD,KAAK,CAACU,QAAN,CAAeF,IAAf,CAAoBG,OAArB,CAAR;AACD,SAFD,MAEO;AACLV,UAAAA,QAAQ,CAACD,KAAK,CAACW,OAAP,CAAR;AACD;AACF;AACF,KAnBH;AAAA,4BAqBE,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF,eAsBE,QAAC,KAAD;AACE,MAAA,EAAE,EAAC,YADL;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,WAAW,EAAC,eAHd;AAIE,MAAA,KAAK,EAAEf,IAJT;AAKE,MAAA,QAAQ,EAAGM,CAAD,IAA4DL,OAAO,CAACK,CAAC,CAACU,MAAF,CAASC,KAAV;AAL/E;AAAA;AAAA;AAAA;AAAA,YAtBF,eA6BE,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA7BF,eA8BE,QAAC,KAAD;AACE,MAAA,EAAE,EAAC,YADL;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,WAAW,EAAC,eAHd;AAIE,MAAA,KAAK,EAAEf,IAJT;AAKE,MAAA,QAAQ,EAAGI,CAAD,IAA4DH,OAAO,CAACG,CAAC,CAACU,MAAF,CAASC,KAAV;AAL/E;AAAA;AAAA;AAAA;AAAA,YA9BF,EAqCGb,KAAK,KAAK,EAAV,iBAAgB,QAAC,KAAD;AAAA,gBAAQA;AAAR;AAAA;AAAA;AAAA;AAAA,YArCnB,eAsCE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD,CA9CD;;GAAML,S;;KAAAA,S;AAgDN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\nimport { Button, Error, Form, Input, Label } from './styles/form-elements'\n\nconst AddWilder = (): JSX.Element => {\n  const [name, setName] = useState('')\n  const [city, setCity] = useState('')\n  const [error, setError] = useState('')\n  return (\n    <Form\n      onSubmit={async (e: { preventDefault: () => void }) => {\n        e.preventDefault()\n        try {\n          const result = await axios.post('http://localhost:5000/api/wilder/create', {\n            name,\n            city,\n          })\n          console.log(result)\n          if (result.data.success) {\n            setError('')\n          }\n        } catch (error) {\n          if (error.response) {\n            setError(error.response.data.message)\n          } else {\n            setError(error.message)\n          }\n        }\n      }}\n    >\n      <Label htmlFor=\"name-input\">Name :</Label>\n      <Input\n        id=\"name-input\"\n        type=\"text\"\n        placeholder=\"Type the name\"\n        value={name}\n        onChange={(e: { target: { value: React.SetStateAction<string> } }) => setName(e.target.value)}\n      />\n      <Label htmlFor=\"city-input\">City :</Label>\n      <Input\n        id=\"city-input\"\n        type=\"text\"\n        placeholder=\"Type the city\"\n        value={city}\n        onChange={(e: { target: { value: React.SetStateAction<string> } }) => setCity(e.target.value)}\n      />\n      {error !== '' && <Error>{error}</Error>}\n      <Button>Add</Button>\n    </Form>\n  )\n}\n\nexport default AddWilder\n"]},"metadata":{},"sourceType":"module"}